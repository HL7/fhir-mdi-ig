
// This is the same ruleset in VRDR death certificate, used below
// RuleSet: BundleSectionSlice(section, name, min, max, short, def, class)
// * section[{section}].entry contains {name} {min}..{max}
// * section[{section}].entry[{name}] ^short = "{short}"
// * section[{section}].entry[{name}] ^definition = "{def}"
// * section[{section}].entry[{name}] only Reference({class})

Profile: CompositionMDIToEDRSNew
Parent: Composition
Id: Composition-mdi-to-edrs-new
Title: "Composition - MDI to EDRS"
Description: "This Composition profile represents data exchanged between an MDI CMS and an EDRS."
* ^status = #active
* ^experimental = false
* ^publisher = "HL7 Public Health Work Group"
* ^jurisdiction = urn:iso:std:iso:3166#US "United States of America"
* extension contains ExtensionTrackingNumber named extension-tracking-numbers 0..* 
* extension[extension-tracking-numbers] ^short = "A tracking number (e.g., case number or file number) assigned by an MDI or other organization to facilitate recognition of common case records across disparate systems"
  * ^definition = "A tracking number (e.g., case number or file number) assigned by an MDI or other organization to facilitate recognition of common case records across disparate systems"
* status 1..1
* type = $loinc#86807-5
  * ^short = "MDI to EDRS (Death administrative information Document)"
  * ^definition = "MDI to EDRS"
* subject 1.. 
* subject only Reference(USCorePatientProfile)
  * ^short = "The subject of the composition is the decedent."
  * ^definition = "The subject of the composition is the decedent."
* author ..1 
* author only Reference(USCorePractitionerProfile)
  * ^short = "Death certifier. If the author is not available, explain using data-absent-reason Extension"
* attester 1..1 
  * ^short = "Death certifier. If the attester is not available, explain using data-absent-reason Extension"
  * ^definition = "The certifying Medical Examiner/Coroner (Certifier)"
  * party only Reference(USCorePractitionerProfile)
* section 1..
  * ^slicing.discriminator.type = #value
  * ^slicing.discriminator.path = "code"
  * ^slicing.rules = #open
  * ^short = "The Composition is broken into sections that, where possible, align with the sections in the 'Common data elements working document'."
  * ^definition = "The Composition is broken into sections that, where possible, align with the sections in the 'Common data elements working document'."
// This is 4..* by the logice of what slices are contained in the section - current version states 1..*
* section contains
    additional-demographics 0..1 and
    circumstances 1..1 and
    jurisdiction 1..1 and
    cause-manner 1..1 and
    medical-history 1..1 and
    exam-autopsy 0..1 and
    narratives 0..1
* section[additional-demographics] ^label = "This slice contains demographic information about the decedent that is not represented in the decedent Patient profile."
  * ^short = "This slice contains demographic information about the decedent that is not represented in the decedent Patient profile."
  * ^definition = "This section contains demographic information about the decedent that is not represented in the decedent Patient profile."
  * code 1..
  * code = CodeSystemMDI#demographics
    * ^definition = "Demographic information section"
    * text 0..1
  * text 0..1
* section[circumstances] ^label = "This slice contains circumstances of the death."
  * ^short = "This slice contains circumstances of the death."
  * ^definition = "This section contains circumstances of the death."
  * code 1..
  * code = CodeSystemMDI#circumstances
    * ^definition = "Circumstances of the death section"
  * entry
    * ^slicing.discriminator.type = #profile
    * ^slicing.discriminator.path = "$this.resolve()"
    * ^slicing.rules = #open
    * ^short = "Entries that are contained in the Circumstances section"
    * ^definition = "Entries that are contained in the Circumstances section"
  * emptyReason 0..1
    * ^short = "Why the section is empty"
    * ^definition = "Why the section is empty"
* insert BundleSectionSlice(circumstances, death-location, 0, *, death-location, death-location, LocationDeath)
* insert BundleSectionSlice(circumstances, tobacco-use-contributed-to-death, 0, *, tobacco-use-contributed-to-death, tobacco-use-contributed-to-death, ObservationTobaccoUseContributedToDeathVitalRecordsNew)
* insert BundleSectionSlice(circumstances, decedent-pregnancy, 0, *, decedent-pregnancy, decedent-pregnancy, ObservationDecedentPregnancyVitalRecordsNew)
* insert BundleSectionSlice(circumstances, injury-location, 0, *, injury-location, injury-location, LocationInjury)
* section[jurisdiction] ^label = "This slice contains jurisdictional information about the death."
  * ^short = "This slice contains jurisdictional information about the death."
  * ^definition = "This section contains jurisdictional information about the death."
  * code 1.. 
  * code = CodeSystemMDI#jurisdiction
    * ^definition = "Jurisdiction section"
  * entry 
    * ^slicing.discriminator.type = #profile
    * ^slicing.discriminator.path = "$this.resolve()"
    * ^slicing.rules = #open
    * ^short = "Entries that are contained in the Jurisdiction section"
    * ^definition = "Entries that are contained in the Jurisdiction section"
  * emptyReason 0..1
    * ^short = "Why the section is empty"
    * ^definition = "Why the section is empty"
* insert BundleSectionSlice(jurisdiction, death-date, 0, *, death-date, death-date, ObservationDeathDateVitalRecordsNew)
* insert BundleSectionSlice(jurisdiction, death-certification, 0, 1, death-certification, death-certification, ProcedureDeathCertificationVitalRecordsNew)
* section[cause-manner] ^label = "This slice contains information about the cause and manner of death."
  * ^short = "This slice contains information about the cause and manner of death."
  * ^definition = "This section contains information about the cause and manner of death."
  * code 1.. 
  * code = CodeSystemMDI#cause-manner
    * ^definition = "Cause and manner of death section"
  * entry 
    * ^slicing.discriminator.type = #profile
    * ^slicing.discriminator.path = "$this.resolve()"
    * ^slicing.rules = #open
    * ^short = "Entries that are contained in the Cause-Manner section"
    * ^definition = "Entries that are contained in the Cause-Manner section"
  * emptyReason 0..1
    * ^short = "Why the section is empty"
    * ^definition = "Why the section is empty"
* insert BundleSectionSlice(cause-manner, cause, 0, 4, cause, cause, ObservationCauseOfDeathPart1VitalRecordsNew)
* insert BundleSectionSlice(cause-manner, other-condition, 0, 1, other-condition, other-condition, ObservationContributingCauseOfDeathPart2)
* insert BundleSectionSlice(cause-manner, manner, 0, 1, manner, manner, ObservationMannerOfDeathVitalRecordsNew)
* insert BundleSectionSlice(cause-manner, how-injury, 0, 1, how-injury, how-injury, ObservationInjuryIncidentVitalRecordsNew)
* section[medical-history] ^label = "This slice contains relevant medical history about the decedent."
  * ^short = "This slice contains relevant medical history about the decedent."
  * ^definition = "This section contains relevant medical history about the decedent."
  * code 1.. 
  * code = CodeSystemMDI#medical-history
    * ^definition = "Medical history section"
  * text 
    * ^label = "Narrative medical condition"
    * ^short = "Narrative medical condition"
    * ^definition = "Narrative medical condition"
  * entry 
    * ^slicing.discriminator.type = #profile
    * ^slicing.discriminator.path = "$this.resolve()"
    * ^slicing.rules = #open
  * emptyReason 0..1
    * ^short = "Why the section is empty"
    * ^definition = "Why the section is empty"
* insert BundleSectionSlice(medical-history, history-condition, 0, *, history-condition, history-condition, USCoreConditionEncounterDiagnosisProfile or USCoreConditionProblemsHealthConcernsProfile)
* section[exam-autopsy] ^label = "This slice contains exam and autopsy information."
  * ^short = "This slice contains exam and autopsy information."
  * ^definition = "This section contains exam and autopsy information."
  * code 1.. 
  * code = CodeSystemMDI#exam-autopsy
    * ^definition = "Exam/Autopsy section"
  * text ..1 
    * ^label = "Description of autopsy findings"
    * ^short = "Description of autopsy findings"
    * ^definition = "Description of autopsy findings"
  * entry ^slicing.discriminator.type = #profile
    * ^slicing.discriminator.path = "$this.resolve()"
    * ^slicing.rules = #open
* insert BundleSectionSlice(exam-autopsy, autopsy-performed, 0, *, autopsy-performed, autopsy-performed, ObservationAutopsyPerformedIndicator)
* insert BundleSectionSlice(exam-autopsy, autopsy-location, 0, *, autopsy-location, autopsy-location, USCoreLocation or USCoreOrganizationProfile)

  * ^short = "This slice contains additional death investigation narrative descriptions."
  * ^definition = "This slice contains additional death investigation narrative descriptions."
  * code = CodeSystemMDI#narratives
  * code
  * text 
    * ^label = "Additional death investigation narrative descriptions."
    * ^short = "Additional death investigation narrative descriptions."
    * ^definition = "Additional death investigation narrative descriptions."
